{"version":3,"file":"static/js/66.636e25be.chunk.js","mappings":"uPAEaA,EAAWC,EAAAA,GAAAA,GAAS,qNAYpBC,EAAYD,EAAAA,GAAAA,EAAQ,+JAWpBE,EAAkBF,EAAAA,GAAAA,EAAQ,qI,SCrB1BG,EAAW,SAAH,GAAmC,IAAD,IAA5BC,KAAQC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KACxC,OACE,UAACP,EAAQ,YACP,UAACE,EAAS,YACR,0BAAM,WAAa,IAAEI,MAEvB,UAACH,EAAe,YACd,0BAAM,aAAe,IAAEI,OAI/B,E,oBCZaC,EAAYP,EAAAA,GAAAA,KAAW,sOAYvBQ,EAAaR,EAAAA,GAAAA,GAAS,6CAItBS,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAY,wP,UCThCW,EAAe,CACnBC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBA4Cb,EAzCmB,WAAO,IAAD,IACjBC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACTC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,MAAMG,KAAK,IAC9CC,GAAYH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,MAAMI,SAAS,IACtDC,GAAWC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,OAClBC,GAAQP,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,MAAMQ,KAAK,IAMpD,OAJAC,EAAAA,EAAAA,YAAU,WACRb,GAASc,EAAAA,EAAAA,GAAeZ,EAAOa,IACjC,GAAG,CAACf,EAAUE,EAAOa,MAGnB,UAACxB,EAAS,YACR,SAAC,IAAU,CACTyB,QAASR,EACTS,YAAatB,EACbuB,MAAM,UACNC,KAAM,IACN,aAAW,kBACX,cAAY,YAGd,UAAC1B,EAAU,CAAC2B,GAAgC,QAA9B,EAAwB,QAAxB,EAAEX,EAASY,QAAQf,aAAK,aAAtB,EAAwBgB,YAAI,QAAI,IAAI,WAClD,SAAC,MAAW,CAACH,KAAM,KAAM,uBAIzBX,IAAcI,GAASR,IACvB,SAACZ,EAAU,UACRY,EAAMmB,KAAI,SAAAC,GAAI,OACb,SAACrC,EAAQ,CAAeC,KAAMoC,GAAfA,EAAKT,GAAkB,OAK1CP,GAAaI,IAAS,SAACa,EAAA,EAAW,MAG1C,C","sources":["components/Posts/Post.styled.js","components/Posts/Post.jsx","pages/UserPosts/PostsPage.styled.js","pages/UserPosts/PostsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PostCard = styled.li`\n  max-width: 480px;\n  padding: 18px;\n  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n  margin: 0 auto;\n  list-style: none;\n\n  :not(:last-child) {\n    margin-bottom: 18px;\n  }\n`;\n\nexport const PostTitle = styled.p`\n  font-size: 18px;\n  margin-bottom: 18px;\n  line-height: 1.4;\n\n  & span {\n    font-weight: bolder;\n    margin-right: 12px;\n  }\n`;\n\nexport const PostDescription = styled.p`\n  font-size: 16px;\n  line-height: 1.7;\n  & span {\n    font-weight: bolder;\n    margin-right: 12px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PostCard, PostDescription, PostTitle } from './Post.styled';\n\nexport const PostItem = ({ post: { title, body } }) => {\n  return (\n    <PostCard>\n      <PostTitle>\n        <span>Title:</span> {title}\n      </PostTitle>\n      <PostDescription>\n        <span>Comment:</span> {body}\n      </PostDescription>\n    </PostCard>\n  );\n};\n\nPostItem.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n  }),\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding-top: 16px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin: 0 auto;\n  max-width: 800px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const PoststList = styled.ul`\n  margin-top: 20px;\n`;\n\nexport const BackButton = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px;\n  text-decoration: none;\n  color: black;\n  font-size: 18px;\n\n  transition: all 250ms linear;\n\n  &:hover,\n  &:focus {\n    color: tomato;\n  }\n`;\n","import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation, useParams } from 'react-router-dom';\nimport FadeLoader from 'react-spinners/FadeLoader';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { PostItem } from '../../components/Posts/Post';\nimport { fetchUserPosts } from '../../redux/userPosts/postsOperations';\nimport { BackButton, Container, PoststList } from './PostsPage.styled';\nimport { ErrorMesage } from '../../components/ErrorMessage/ErrorMesage';\n\nconst spinnerStyle = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n};\n\nconst UsersPosts = () => {\n  const dispatch = useDispatch();\n  const params = useParams();\n  const posts = useSelector(state => state.posts.items);\n  const isLoading = useSelector(state => state.posts.isLoading);\n  const location = useRef(useLocation());\n  const error = useSelector(state => state.posts.error);\n\n  useEffect(() => {\n    dispatch(fetchUserPosts(params.id));\n  }, [dispatch, params.id]);\n\n  return (\n    <Container>\n      <FadeLoader\n        loading={isLoading}\n        cssOverride={spinnerStyle}\n        color=\"#FF6347\"\n        size={150}\n        aria-label=\"Loading Spinner\"\n        data-testid=\"loader\"\n      />\n\n      <BackButton to={location.current.state?.from ?? '/'}>\n        <BiArrowBack size={20} />\n        Go Back to users\n      </BackButton>\n\n      {!isLoading && !error && posts && (\n        <PoststList>\n          {posts.map(item => (\n            <PostItem key={item.id} post={item} />\n          ))}\n        </PoststList>\n      )}\n\n      {!isLoading && error && <ErrorMesage />}\n    </Container>\n  );\n};\n\nexport default UsersPosts;\n"],"names":["PostCard","styled","PostTitle","PostDescription","PostItem","post","title","body","Container","PoststList","BackButton","Link","spinnerStyle","position","top","left","transform","dispatch","useDispatch","params","useParams","posts","useSelector","state","items","isLoading","location","useRef","useLocation","error","useEffect","fetchUserPosts","id","loading","cssOverride","color","size","to","current","from","map","item","ErrorMesage"],"sourceRoot":""}